Product Requirements Document: SwarmBot Project Refinement

This document outlines the necessary tasks to improve the structure, documentation, and maintainability of the SwarmBot project.

**1. Project Structure & Maintenance:**
    *   **1.1 Consolidate Launchers and Remove Deprecated Code:** The project has multiple redundant launcher scripts and deprecated code directories. The goal is to consolidate all launch logic into `launch.py`, remove all other launcher files, and delete the `deprecated_launchers` and `scripts/deprecated` directories to simplify the project structure.
    *   **1.2 Evaluate and Refactor the Task Management System:** The project uses a custom, file-based task management system in the `.taskmaster` directory. The goal is to evaluate this system and consider migrating to a more standard approach like a single `TASKS.md` file or GitHub Issues to improve visibility and manageability.

**2. Documentation:**
    *   **2.1 Correct README.md Regarding Testing Framework Status:** The `README.MD` incorrectly states "Testing Framework: Pending". The goal is to update the `README.MD` to accurately reflect the current state of the testing framework and include instructions on how to run the tests.
    *   **2.2 Reorganize the Docs Directory:** The `Docs` directory is large and contains many similarly named and potentially outdated files. The goal is to reorganize the documentation by creating a central `INDEX.md` or `SUMMARY.md` file, and archiving or deleting outdated documents to improve clarity and maintainability.
    *   **2.3 Clarify Configuration Management in README.md:** The roles of the `.env` file and `config/servers_config.json` are not explicitly defined in the documentation. The goal is to add a section to the main `README.md` that clearly explains the purpose of each configuration file.

**3. Testing:**
    *   **3.1 Document the Project's Testing Strategy:** The testing strategy is unclear due to the mix of files in the `tests` directory. The goal is to create a `README.md` file within the `tests` directory that explains the testing strategy, how to run the tests, and the purpose of the different test files.